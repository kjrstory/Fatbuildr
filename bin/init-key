#!/usr/bin/env python3

import gpg
import os
import string
import secrets
import sys

def main():

    keyring_dir = '/var/lib/fatbuildr/keyring'

    # check if key already exist
    with gpg.Context(home_dir=keyring_dir) as ctx:
        if any(ctx.keylist()):
            print("Fatbuildr GPG key already exists, leaving.")
            sys.exit(1)

    # generate random passphrase and save it in file
    print("Generating random passphrase")
    alphabet = string.ascii_letters + string.digits
    passphrase = ''.join(secrets.choice(alphabet) for i in range(32))
    passphrase_path = os.path.join(keyring_dir, 'passphrase')
    with open(passphrase_path, 'w+') as fh:
        fh.write(passphrase)
    os.chmod(passphrase_path, 0o400)  # restrict access to RO

    # generate GPG key with its subkey
    print("Generating GPG key")
    with gpg.Context(home_dir=keyring_dir) as ctx:
        genmasterkey = ctx.create_key(userid='HPCk.it maintainers <maintainers@hpck.it>',
                                      algorithm='rsa4096',
                                      expires=False,
                                      passphrase=passphrase)
        print("Generated key with fingerprint {0}.".format(genmasterkey.fpr))
        masterkey = ctx.get_key(genmasterkey.fpr)
        subkey = ctx.create_subkey(key=masterkey,
                                   algorithm='rsa4096',
                                   expires=False,
                                   sign=True,
                                   passphrase=passphrase)
        print("Generated subkey for signature with fingerprint {0}".format(subkey.fpr))

if __name__ == '__main__':
    main()

