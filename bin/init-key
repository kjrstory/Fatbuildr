#!/usr/bin/env python3

import gnupg
import os
import string
import secrets
import sys

def main():

    keyring_dir = '/var/lib/fatbuildr/keyring'

    # init gnupg library
    gpg = gnupg.GPG(gnupghome=keyring_dir)
    gpg.encoding = 'utf-8'

    # check if key is already present
    if len(gpg.list_keys()):
        print("Fatbuildr GPG key is already present, leaving.")
        sys.exit(1)

    # generate random passphrase and save it in file
    print("Generating random passphrase")
    alphabet = string.ascii_letters + string.digits
    passphrase = ''.join(secrets.choice(alphabet) for i in range(32))
    passphrase_path = os.path.join(keyring_dir, 'passphrase')
    with open(passphrase_path, 'w+') as fh:
        fh.write(passphrase)
    os.chmod(passphrase_path, 0o400)  # restrict access to RO

    # generate GPG key
    print("Generating GPG key")
    input_data = gpg.gen_key_input(key_type="RSA", key_length=4096,
                                   expire_date=0,
                                   name_real="HPCk.it maintainers",
                                   name_email="maintainers@hpck.it",
                                   passphrase=passphrase)
    gpg.gen_key(input_data)

    # report generated key
    key = gpg.list_keys()[0]
    print("Generated key\n"
          "  type: %s\n"
          "  length: %s\n"
          "  id: %s\n"
          "  fingerprint: %s\n"
          "  uid: %s" % \
          ('RSA', key['length'], key['keyid'], key['fingerprint'], key['uids'][0]))

if __name__ == '__main__':
    main()

