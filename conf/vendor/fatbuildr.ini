# This is the vendor configuration file of Fatbuildr. Do not modify! To change
# Fatbuildr configuration parameters, please override these parameters in
# /etc/fatbuildr/fatbuildr.ini

[dirs]
instances = /etc/fatbuildr/instances.d
queue = /var/lib/fatbuildr/queue
build = /var/lib/fatbuildr/build
archives = /var/lib/fatbuildr/archives
registry = /var/lib/fatbuildr/registry
cache = /var/cache/fatbuildr
tmp = /var/tmp

[daemon]
debug = no

[web]
debug = no
# Bind address of the web application. By default, it only listens for incoming
# connections from localhost.
host = localhost
vendor_templates = /usr/lib/fatbuildr/web/templates
templates = /etc/fatbuildr/web/templates

[images]
storage = /var/lib/fatbuildr/images
defs = /usr/lib/fatbuildr/images
# List of artefacts formats enabled on this Fatbuildr installation.
formats = rpm,deb,osi
create_cmd = mkosi --default {{ definition }} --output {{ path }} --cache {{ dirpath }}/.cache-{{ format }}

[registry]
conf = /usr/lib/fatbuildr/registry

[containers]
# The images built with mkosi have a symlink
# /etc/resolv.conf â†’ /run/systemd/resolve/* as they expect systemd-resolved to
# run inside the containers (ie. systemd-nspawn -B).
init_opts = --resolv-conf=replace-stub
opts = --quiet

[keyring]
storage = /var/lib/fatbuildr/keyring
type = rsa
size = 4096
expires = no

#
# Formats specifics parameters
#
[format:deb]
init_cmd = cowbuilder --create --distribution {{ environment }} --basepath /var/cache/pbuilder/{{ environment }}
img_update_cmds = apt update && apt --yes upgrade
env_update_cmds = cowbuilder --update --basepath /var/cache/pbuilder/{{ environment }}

[format:rpm]
init_cmd = mock --init --root={{ environment }} --config-opts="chroot_additional_packages=perl"
img_update_cmds = dnf upgrade
env_update_cmds = mock --update --root={{ environment }}

[format:osi]
img_update_cmds = dnf upgrade
